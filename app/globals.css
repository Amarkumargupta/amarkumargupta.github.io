@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* Light Theme Variables (Saffron/Orange influenced) - "Amber Sunset" Theme */
  --foreground-rgb: 51, 51, 51;
  --background-start-rgb: 255, 252, 245;
  --background-end-rgb: 255, 248, 235;
  --background: 255, 252, 245;
  --foreground: 51, 51, 51;
  --card: 255, 255, 255;
  --card-foreground: 51, 51, 51;
  --popover: 255, 255, 255;
  --popover-foreground: 51, 51, 51;

  /* Rich Saffron Palette */
  --saffron-light: 255, 213, 153; /* #FFD599 - soft */
  --saffron: 255, 153, 51; /* #FF9933 - standard */
  --saffron-dark: 230, 126, 34; /* #E67E22 - deeper */
  --saffron-deep: 211, 84, 0; /* #D35400 - rich */
  --saffron-accent: 243, 156, 18; /* #F39C12 - vibrant */
  
  /* Complementary Palette */
  --indigo-accent: 52, 73, 94; /* #34495E - deep blue-gray */
  --cream: 253, 245, 230; /* #FDF5E6 - soft cream */
  --ivory: 255, 255, 240; /* #FFFFF0 - warm white */
  
  /* Component Colors */
  --primary: 243, 156, 18; /* vibrant saffron */
  --primary-hover: 230, 126, 34; /* deeper orange */
  --primary-foreground: 255, 255, 255;
  --secondary: 252, 243, 207; /* pale yellow */
  --secondary-foreground: 51, 51, 51;
  --muted: 253, 245, 230; /* cream */
  --muted-foreground: 128, 128, 128;
  --accent: 255, 153, 51; /* standard saffron */
  --accent-foreground: 255, 255, 255;
  --destructive: 231, 76, 60; /* red */
  --destructive-foreground: 255, 255, 255;
  --border: 245, 176, 65; /* golden */
  --input: 253, 245, 230;
  --ring: 243, 156, 18;

  /* Terminal Colors for Light Theme - Redefined for better visibility */
  --terminal-green: 39, 174, 96; /* emerald green */
  --terminal-green-dark: 16, 122, 39; /* forest green */
  --terminal-black: 248, 248, 248; /* off-white */
  --terminal-gray: 149, 165, 166; /* cool gray */
  --terminal-blue: 41, 128, 185; /* bright blue */
  --terminal-yellow: 241, 196, 15; /* vibrant yellow */
  --terminal-red: 231, 76, 60; /* bright red */
  --terminal-purple: 142, 68, 173; /* amethyst purple */

  /* Chart Colors - Cohesive Palette */
  --chart-1: 243, 156, 18; /* saffron accent */
  --chart-2: 230, 126, 34; /* saffron dark */
  --chart-3: 241, 196, 15; /* yellow */
  --chart-4: 231, 76, 60; /* red */
  --chart-5: 41, 128, 185; /* blue */
  --radius: 0.5rem;
  
  /* Custom Transition Variables */
  --hover-transition: 0.3s ease-in-out;
  --hover-scale: 1.03;
  --hover-shadow: 0 8px 20px rgba(243, 156, 18, 0.15);
  --card-hover-border: rgba(243, 156, 18, 0.5);

  /* Light Theme Terminal Element Overrides */
  --terminal-green-override: 243, 156, 18; /* Replace green with saffron in light mode */
  --terminal-green-dark-override: 230, 126, 34; /* Replace dark green with dark saffron */
}

.dark {
  /* Dark Theme Variables */
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 0, 0, 0;
  --background-end-rgb: 0, 0, 0;
  --background: 10, 10, 10;
  --foreground: 255, 255, 255;
  --card: 18, 18, 18;
  --card-foreground: 245, 245, 245;
  --popover: 18, 18, 18;
  --popover-foreground: 245, 245, 245;
  
  /* Terminal Colors for Dark Theme */
  --terminal-green: 104, 255, 104;
  --terminal-green-dark: 0, 153, 0;
  --terminal-black: 18, 18, 18;
  --terminal-gray: 84, 84, 84;
  --terminal-blue: 0, 160, 255;
  --terminal-yellow: 255, 204, 0;
  --terminal-red: 255, 64, 64;
  --terminal-purple: 153, 102, 255;
  
  /* UI Elements for Dark Theme */
  --primary: 104, 255, 104;
  --primary-foreground: 10, 10, 10;
  --secondary: 30, 30, 30;
  --secondary-foreground: 245, 245, 245;
  --muted: 37, 37, 37;
  --muted-foreground: 163, 163, 163;
  --accent: 30, 30, 30;
  --accent-foreground: 245, 245, 245;
  --destructive: 205, 50, 50;
  --destructive-foreground: 250, 250, 250;
  --border: 37, 37, 37;
  --input: 37, 37, 37;
  --ring: 212, 250, 212;
  
  /* Chart Colors for Dark Theme */
  --chart-1: 104, 255, 104;
  --chart-2: 0, 160, 255;
  --chart-3: 255, 204, 0;
  --chart-4: 255, 64, 64;
  --chart-5: 153, 102, 255;
  --radius: 0.375rem;
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    background-color: rgb(var(--terminal-black));
    color: rgb(var(--terminal-green));
  }
  
  /* Light theme base overrides */
  :root:not(.dark) body {
    background-color: rgb(var(--background));
    color: rgb(var(--foreground));
    background-image: linear-gradient(
      to bottom,
      rgb(var(--background-start-rgb)),
      rgb(var(--background-end-rgb))
    );
  }
}

/* Comprehensive Light Theme Terminal Element Overrides */
:root:not(.dark) .terminal-prompt-user,
:root:not(.dark) .terminal-prompt-location,
:root:not(.dark) .terminal-prompt-dollar,
:root:not(.dark) .command,
:root:not(.dark) .command-input,
:root:not(.dark) .highlight,
:root:not(.dark) .result a,
:root:not(.dark) .success,
:root:not(.dark) .skill-title,
:root:not(.dark) .project-title,
:root:not(.dark) .active-link,
:root:not(.dark) .section-title,
:root:not(.dark) .blog-post-title,
:root:not(.dark) .tag,
:root:not(.dark) .contact-info a,
:root:not(.dark) .terminal-prompt-cursor,
:root:not(.dark) [data-component-name="TerminalNavigation"] {
  color: rgb(var(--saffron-accent)) !important;
}

:root:not(.dark) .terminal-content {
  background-color: rgba(255, 255, 255, 0.7);
}

:root:not(.dark) .terminal-button {
  transition: transform 0.3s ease, filter 0.3s ease;
}

:root:not(.dark) .terminal-button:hover {
  transform: scale(1.1);
  filter: brightness(1.1);
}

/* Override any inline styles or dynamically generated classes */
:root:not(.dark) [class*="border-terminal-green"],
:root:not(.dark) [class*="border-[rgb(var(--terminal-green"],
:root:not(.dark) [style*="border-color: rgb(var(--terminal-green"],
:root:not(.dark) [style*="border-color:rgb(var(--terminal-green"],
:root:not(.dark) [style*="border: 1px solid rgb(var(--terminal-green"] {
  border-color: rgb(var(--saffron)) !important;
}

:root:not(.dark) [class*="text-terminal-green"],
:root:not(.dark) [class*="text-[rgb(var(--terminal-green"],
:root:not(.dark) [style*="color: rgb(var(--terminal-green"],
:root:not(.dark) [style*="color:rgb(var(--terminal-green"] {
  color: rgb(var(--saffron-accent)) !important;
}

:root:not(.dark) [class*="bg-terminal-green"],
:root:not(.dark) [class*="bg-[rgb(var(--terminal-green"],
:root:not(.dark) [style*="background-color: rgb(var(--terminal-green"],
:root:not(.dark) [style*="background-color:rgb(var(--terminal-green"],
:root:not(.dark) [style*="background: rgb(var(--terminal-green"] {
  background-color: rgb(var(--saffron)) !important;
}

/* Universal text color override for terminal-green */
:root:not(.dark) * {
  --terminal-green-rgb-replacement: var(--saffron-accent);
}

/* Force SVG elements to use saffron colors */
:root:not(.dark) svg[fill="rgb(var(--terminal-green))"],
:root:not(.dark) svg[stroke="rgb(var(--terminal-green))"],
:root:not(.dark) path[fill="rgb(var(--terminal-green))"],
:root:not(.dark) path[stroke="rgb(var(--terminal-green))"] {
  fill: rgb(var(--saffron-accent)) !important;
  stroke: rgb(var(--saffron-accent)) !important;
}

/* Box shadow overrides */
:root:not(.dark) [style*="box-shadow"][style*="rgb(var(--terminal-green"] {
  box-shadow: 0 4px 12px rgba(var(--saffron), 0.2) !important;
}

/* Fix navigation buttons in light theme */
:root:not(.dark) .nav-link {
  /* Fix focus ring color */
  --ring-color: rgba(var(--saffron), 0.5) !important;
}

:root:not(.dark) .nav-link:hover {
  border-color: rgba(var(--saffron), 0.4) !important;
  background-color: rgba(var(--saffron), 0.1) !important;
}

:root:not(.dark) button.nav-link[aria-pressed="true"],
:root:not(.dark) button.nav-link[style*="background-color: rgba(104, 255, 104, 0.1)"] {
  color: rgb(var(--saffron-deep)) !important;
  border-color: rgba(var(--saffron), 0.5) !important;
  background-color: rgba(var(--saffron-light), 0.15) !important;
}

/* Fix specific white text on hover issue */
:root:not(.dark) .nav-link:hover,
:root:not(.dark) .nav-link:focus,
:root:not(.dark) .nav-link[style*="color: rgb(255, 255, 255)"] {
  color: rgb(var(--saffron-deep)) !important;
}

:root:not(.dark) .nav-link:hover span,
:root:not(.dark) .nav-link:focus span,
:root:not(.dark) .nav-link[style*="color: rgb(255, 255, 255)"] span:not([class*="text-[rgba(var(--terminal-green"]) {
  color: rgb(var(--saffron-deep)) !important;
}

:root:not(.dark) .nav-link span[class*="text-[rgba(var(--terminal-green"] {
  color: rgba(var(--saffron), 0.7) !important;
}

.terminal-container {
  background-color: rgba(var(--terminal-black), 0.9);
  color: rgb(var(--terminal-green));
  border: 1px solid rgba(var(--terminal-gray), 0.5);
  border-radius: 6px;
  padding: 0;
  font-family: var(--font-mono);
  overflow: hidden;
  position: relative;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

/* Light theme terminal container */
:root:not(.dark) .terminal-container {
  background-color: rgba(255, 255, 255, 0.85);
  color: rgb(var(--saffron-dark));
  border: 1px solid rgba(var(--saffron-light), 0.7);
  box-shadow: 0 8px 30px rgba(var(--saffron), 0.15);
}

.terminal-content {
  padding: 0.75rem;
}

@media (min-width: 640px) {
  .terminal-content {
    padding: 1rem;
  }
}

.terminal-header {
  display: flex;
  align-items: center;
  padding: 0.75rem;
  background-color: rgba(40, 40, 40, 0.95);
  border-bottom: 1px solid rgba(var(--terminal-green), 0.3);
  margin-bottom: 1rem;
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
}

/* Light theme terminal header styling */
:root:not(.dark) .terminal-header {
  background: linear-gradient(to right, rgba(var(--saffron-dark), 0.95), rgba(var(--saffron-deep), 0.95));
  border-bottom: 1px solid rgba(var(--saffron-light), 0.5);
  box-shadow: 0 2px 8px rgba(var(--saffron), 0.15);
}

.terminal-button {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  margin-right: 6px;
  transition: transform 0.2s;
}

@media (min-width: 640px) {
  .terminal-button {
    width: 12px;
    height: 12px;
    margin-right: 8px;
  }
}

.terminal-button:hover {
  transform: scale(1.1);
}

.terminal-close {
  background-color: #FF5F56;
}
.terminal-close:hover {
  background-color: #FF4146;
}

.terminal-minimize {
  background-color: #FFBD2E;
}
.terminal-minimize:hover {
  background-color: #FFAD1E;
}

.terminal-maximize {
  background-color: #27C93F;
}
.terminal-maximize:hover {
  background-color: #17B92F;
}

.terminal-title {
  margin-left: 8px;
  font-size: 12px;
  color: rgba(var(--foreground-rgb), 0.9);
  font-weight: 500;
}

@media (min-width: 640px) {
  .terminal-title {
    margin-left: 10px;
    font-size: 14px;
  }
}

.terminal-prompt {
  display: flex;
  margin-bottom: 0.5rem;
  font-size: 12px;
}

@media (min-width: 640px) {
  .terminal-prompt {
    font-size: 14px;
  }
}

.terminal-prompt-user {
  color: rgb(var(--terminal-green));
  font-weight: bold;
  margin-right: 0.25rem;
}

@media (min-width: 640px) {
  .terminal-prompt-user {
    margin-right: 0.5rem;
  }
}

.terminal-prompt-location {
  color: rgb(var(--chart-2));
  margin-right: 0.25rem;
}

@media (min-width: 640px) {
  .terminal-prompt-location {
    margin-right: 0.5rem;
  }
}

.terminal-prompt-dollar {
  color: rgb(var(--terminal-green));
  margin-right: 0.25rem;
}

@media (min-width: 640px) {
  .terminal-prompt-dollar {
    margin-right: 0.5rem;
  }
}

.terminal-prompt-cursor {
  display: inline-block;
  width: 6px;
  height: 12px;
  background-color: rgb(var(--terminal-green));
  animation: blink 1s step-end infinite;
  margin-left: 2px;
}

/* Light theme cursor style */
:root:not(.dark) .terminal-prompt-cursor {
  background-color: rgb(var(--saffron-accent)) !important;
}

@media (min-width: 640px) {
  .terminal-prompt-cursor {
    width: 8px;
    height: 16px;
  }
}

.line {
  margin-bottom: 0.5rem;
  font-size: 12px;
}

@media (min-width: 640px) {
  .line {
    font-size: 14px;
  }
}

.command {
  color: rgb(var(--terminal-green));
}

.result {
  color: rgba(var(--foreground-rgb), 0.8);
  margin-left: 0.5rem;
}

@media (min-width: 640px) {
  .result {
    margin-left: 1rem;
  }
}

.highlight {
  color: rgb(var(--chart-2));
  font-weight: bold;
}

.warning {
  color: rgb(var(--terminal-yellow));
}

.error {
  color: rgb(var(--terminal-red));
}

.success {
  color: rgb(var(--chart-1));
}

.command-input {
  background: transparent;
  border: none;
  color: rgb(var(--terminal-green));
  outline: none;
  flex: 1;
  font-family: var(--font-mono);
  caret-color: rgb(var(--terminal-green));
  font-size: 12px;
}

/* Light theme input styles */
:root:not(.dark) .command-input {
  caret-color: rgb(var(--saffron-accent)) !important;
}

@media (min-width: 640px) {
  .command-input {
    font-size: 14px;
  }
}

@keyframes blink {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

@keyframes theme-transition {
  0% { opacity: 0; }
  20% { opacity: 1; }
  80% { opacity: 1; }
  100% { opacity: 0; }
}

.infrastructure-canvas {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
  opacity: 0.15;
  pointer-events: none;
}

.terminal-content {
  position: relative;
  z-index: 1;
}

::-webkit-scrollbar {
  width: 6px;
}

@media (min-width: 640px) {
  ::-webkit-scrollbar {
    width: 8px;
  }
}

::-webkit-scrollbar-track {
  background: rgba(var(--terminal-gray), 0.2);
}

::-webkit-scrollbar-thumb {
  background: rgba(var(--terminal-green), 0.5);
  border-radius: 3px;
}

@media (min-width: 640px) {
  ::-webkit-scrollbar-thumb {
    border-radius: 4px;
  }
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(var(--terminal-green), 0.7);
}

.nav-link {
  color: rgb(var(--terminal-green));
  transition: all 0.2s ease;
  position: relative;
  text-decoration: none;
  background-color: transparent;
}

.nav-link:hover {
  color: rgb(255, 255, 255);
  text-shadow: 0 0 8px rgba(var(--terminal-green), 0.8);
}

/* Light theme nav link styling */
:root:not(.dark) .nav-link {
  color: rgb(var(--saffron-dark));
  font-weight: 500;
  transition: all var(--hover-transition);
  position: relative;
}

:root:not(.dark) .nav-link:hover {
  color: rgb(var(--saffron-accent));
  text-shadow: 0 0 8px rgba(var(--saffron), 0.8);
  transform: translateY(-1px);
}

/* Removed underline effect to match dark theme */

:root:not(.dark) .nav-link.active {
  color: rgb(var(--saffron-deep));
  background-color: rgba(var(--saffron-light), 0.15);
  border-color: rgba(var(--saffron), 0.3);
  font-weight: 600;
}

.nav-link.active {
  background-color: rgba(var(--terminal-green), 0.1);
  border-color: rgba(var(--terminal-green), 0.5);
  color: rgb(255, 255, 255);
}

.terminal-history {
  max-height: 60vh;
  overflow-y: auto;
  padding-right: 8px;
}

@media (min-width: 640px) {
  .terminal-history {
    max-height: 70vh;
    padding-right: 10px;
  }
}

.section-enter {
  opacity: 0;
  transform: translateY(10px);
}

.section-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 300ms, transform 300ms;
}

.projects-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
}

@media (min-width: 640px) {
  .projects-grid {
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
  }
}

.project-card {
  background: rgba(var(--terminal-gray), 0.1);
  border: 1px solid rgba(var(--terminal-green), 0.3);
  border-radius: var(--radius);
  padding: 0.75rem;
  transition: all var(--hover-transition);
  position: relative;
  overflow: hidden;
}

@media (min-width: 640px) {
  .project-card {
    padding: 1rem;
  }
}

.project-card:hover {
  transform: translateY(-5px) scale(1.01);
  box-shadow: 0 5px 15px rgba(var(--terminal-green), 0.2);
  border-color: rgba(var(--terminal-green), 0.5);
}

/* Light theme specific styling */
:root:not(.dark) .project-card {
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.8), rgba(var(--cream), 0.6));
  border: 1px solid rgba(var(--saffron-light), 0.5);
  box-shadow: 0 3px 10px rgba(var(--saffron), 0.05);
}

:root:not(.dark) .project-card:hover {
  border-color: rgba(var(--saffron), 0.7);
  box-shadow: var(--hover-shadow);
  transform: translateY(-5px) scale(var(--hover-scale));
}

:root:not(.dark) .project-card:before {
  content: '';
  position: absolute;
  top: -4px;
  left: 0;
  height: 4px;
  width: 100%;
  background: linear-gradient(90deg, rgba(var(--saffron-light), 0.7), rgba(var(--saffron), 0.8), rgba(var(--saffron-dark), 0.7));
  transform: translateY(-100%);
  transition: transform 0.3s ease;
}

:root:not(.dark) .project-card:hover:before {
  transform: translateY(0);
}

.skills-container {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
}

@media (min-width: 640px) {
  .skills-container {
    gap: 1rem;
  }
}

.skill-item {
  background: rgba(var(--terminal-gray), 0.1);
  border: 1px solid rgba(var(--terminal-green), 0.3);
  border-radius: var(--radius);
  padding: 0.375rem 0.75rem;
  transition: all var(--hover-transition);
  font-size: 12px;
  position: relative;
  z-index: 1;
}

@media (min-width: 640px) {
  .skill-item {
    padding: 0.5rem 1rem;
    font-size: 14px;
  }
}

.skill-item:hover {
  background: rgba(var(--terminal-green), 0.15);
  transform: scale(1.05);
  border-color: rgba(var(--terminal-green), 0.5);
}

/* Light theme skill item styling */
:root:not(.dark) .skill-item {
  background: rgba(var(--saffron-light), 0.1);
  border: 1px solid rgba(var(--saffron), 0.3);
  color: rgba(var(--saffron-deep), 0.9);
  box-shadow: 0 2px 4px rgba(var(--saffron), 0.05);
}

:root:not(.dark) .skill-item:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, rgba(var(--saffron-light), 0.2), rgba(var(--saffron), 0.1));
  z-index: -1;
  border-radius: calc(var(--radius) - 1px);
  opacity: 0;
  transition: opacity var(--hover-transition);
}

:root:not(.dark) .skill-item:hover {
  background: rgba(var(--saffron-light), 0.15);
  border-color: rgba(var(--saffron), 0.6);
  transform: scale(1.08);
  color: rgba(var(--saffron-deep), 1);
}

:root:not(.dark) .skill-item:hover:before {
  opacity: 1;
}

.prose {
  color: rgb(var(--foreground-rgb));
  max-width: none;
  font-size: 14px;
}

@media (min-width: 640px) {
  .prose {
    font-size: 16px;
  }
}

.prose h1,
.prose h2,
.prose h3,
.prose h4,
.prose h5,
.prose h6 {
  color: rgb(var(--terminal-green));
  margin-top: 1.5em;
  margin-bottom: 0.75em;
}

/* Light theme headings */
:root:not(.dark) .prose h1,
:root:not(.dark) .prose h2,
:root:not(.dark) .prose h3,
:root:not(.dark) .prose h4,
:root:not(.dark) .prose h5,
:root:not(.dark) .prose h6 {
  color: rgb(var(--saffron-dark));
  background: linear-gradient(90deg, rgb(var(--saffron-dark)), rgb(var(--saffron-deep)));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

@media (min-width: 640px) {
  .prose h1,
  .prose h2,
  .prose h3,
  .prose h4,
  .prose h5,
  .prose h6 {
    margin-top: 2em;
    margin-bottom: 1em;
  }
}

.prose h1 {
  font-size: 2em;
}

.prose h2 {
  font-size: 1.75em;
}

.prose h3 {
  font-size: 1.5em;
}

.prose p {
  margin-bottom: 1.25em;
  line-height: 1.6;
}

@media (min-width: 640px) {
  .prose p {
    margin-bottom: 1.5em;
    line-height: 1.8;
  }
}

.prose a {
  color: rgb(var(--terminal-green));
  text-decoration: underline;
  transition: color 0.2s;
}

.prose a:hover {
  color: rgb(var(--terminal-green-dark));
}

/* Light theme links */
:root:not(.dark) .prose a {
  color: rgb(var(--saffron-dark));
  text-decoration: underline;
  text-decoration-color: rgba(var(--saffron), 0.5);
  text-underline-offset: 2px;
  transition: all var(--hover-transition);
}

:root:not(.dark) .prose a:hover {
  color: rgb(var(--saffron-deep));
  text-decoration-color: rgb(var(--saffron));
}

.prose code {
  background: rgba(var(--terminal-gray), 0.2);
  padding: 0.2em 0.4em;
  border-radius: 0.2em;
  font-size: 0.9em;
}

.prose pre {
  background: rgba(var(--terminal-gray), 0.2) !important;
  border: 1px solid rgba(var(--terminal-green), 0.2);
  border-radius: 0.5em;
  padding: 0.75em;
  margin: 1.25em 0;
  overflow-x: auto;
  font-size: 12px;
}

@media (min-width: 640px) {
  .prose pre {
    padding: 1em;
    margin: 1.5em 0;
    font-size: 14px;
  }
}

.prose pre code {
  background: none;
  padding: 0;
  border-radius: 0;
  color: inherit;
}

.prose ul,
.prose ol {
  margin-bottom: 1.25em;
  padding-left: 1.25em;
}

@media (min-width: 640px) {
  .prose ul,
  .prose ol {
    margin-bottom: 1.5em;
    padding-left: 1.5em;
  }
}

.prose li {
  margin-bottom: 0.375em;
}

@media (min-width: 640px) {
  .prose li {
    margin-bottom: 0.5em;
  }
}

.prose blockquote {
  border-left: 4px solid rgb(var(--terminal-green));
  padding-left: 0.75em;
  margin: 1.25em 0;
  font-style: italic;
  color: rgba(var(--foreground-rgb), 0.8);
}

@media (min-width: 640px) {
  .prose blockquote {
    padding-left: 1em;
    margin: 1.5em 0;
  }
}

.prose img {
  border-radius: 0.5em;
  margin: 1.25em 0;
}

@media (min-width: 640px) {
  .prose img {
    margin: 1.5em 0;
  }
}

.line-numbers .line-numbers-rows {
  border-right: 1px solid rgba(var(--terminal-green), 0.2);
  padding-right: 0.75em;
}

@media (min-width: 640px) {
  .line-numbers .line-numbers-rows {
    padding-right: 1em;
  }
}

.line-numbers-rows > span:before {
  color: rgba(var(--terminal-green), 0.5);
}